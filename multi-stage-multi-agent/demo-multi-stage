pipeline {
  agent any

  environment {
    APP_NAME = "flask-demo"
    DOCKER_IMAGE = "flask-demo:latest"
  }

  stages {
    stage('Checkout') {
      steps {
        echo "Pulling code from repository..."
        checkout scm
      }
    }

    stage('Install Dependencies') {
      agent {
        docker { image 'python:3.9-slim' }
      }
      steps {
        echo "Installing Python dependencies..."
        sh 'pip install -r requirements.txt'
      }
    }

    stage('Run Tests') {
      agent {
        docker { image 'python:3.9-slim' }
      }
      steps {
        echo "Running unit tests..."
        sh 'pytest || echo "No tests found, skipping..."'
      }
    }

    stage('Build Docker Image') {
      steps {
        echo "Building Docker image for ${APP_NAME}..."
        sh "docker build -t ${DOCKER_IMAGE} ."
      }
    }

    stage('Deploy') {
      steps {
        echo "Deploying application container..."
        sh "docker run -d -p 5000:5000 --name ${APP_NAME} ${DOCKER_IMAGE} || echo 'Container may already be running'"
      }
    }
  }

  post {
    always {
      echo "Pipeline finished."
    }
  }
}
