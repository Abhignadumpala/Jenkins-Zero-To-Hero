pipeline {
    agent any

    environment {
        WORKSPACE_DIR = "${env.WORKSPACE}/multi-stage-multi-agent/demo-multi-stage"
    }

    stages {
        stage('Back-end Build & Run') {
            agent {
                docker { image 'python:3.11' }
            }
            steps {
                echo "Building and running Flask back-end..."
                dir("${WORKSPACE_DIR}") {
                    sh '''
                        # Build Docker image for Flask app
                        docker build -t flask-backend .

                        # Stop any old container
                        docker rm -f flask-backend-container || true

                        # Run container persistently
                        docker run -d --name flask-backend-container -p 5000:5000 flask-backend
                    '''
                }
            }
        }

        stage('Front-end Build & Run') {
            agent {
                docker { image 'node:16-alpine' }
            }
            steps {
                echo "Building and running Node.js front-end..."
                dir("${WORKSPACE_DIR}/frontend") {
                    sh '''
                        docker build -t frontend .
                        docker rm -f frontend-container || true
                        docker run -d --name frontend-container -p 3000:3000 frontend
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline finished successfully! Access Flask at port 5000 and front-end at 3000."
        }
    }
}
